{
	"$schema": "http://json-schema.org/draft-07/schema",
	"type": "object",
	"properties": {
		"vanilla": {
			"type": "array",
			"items": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"requires": {
						"$ref": "../../../../common/schema/bridge/requires.json"
					},
					"values": {
						"type": "array",
						"items": {
							"required": ["valueName", "type"],
							"type": "object",
							"additionalProperties": false,
							"properties": {
								"type": {
									"type": "string",
									"enum": [
										"math",
										"query",
										"variable",
										"context"
									]
								},
								"valueName": {
									"type": "string",
									"description": "The name of the molang value, e.g. 'math.cos'."
								},
								"description": {
									"type": "string",
									"description": "A description of the molang value."
								},
								"isProperty": {
									"description": "Whether or not this is a property and not a function, e.g. 'math.pi'.",
									"type": "boolean"
								},
								"arguments": {
									"description": "An ordered list of the arguments allowed in this function.",
									"type": "array",
									"items": {
										"type": "object",
										"required": ["argumentName"],
										"additionalProperties": false,
										"properties": {
											"argumentName": {
												"type": "string",
												"description": "The name of the argument."
											},
											"type": {
												"description": "The type of value that this argument accepts.",
												"type": "string",
												"enum": ["number", "string"]
											},
											"additionalData": {
												"description": "Additional data that will be proposed if the type is 'string' or the type is omitted.",
												"type": "object",
												"additionalProperties": false,
												"properties": {
													"values": {
														"description": "An array of string values that are allowed at this argument.",
														"type": "array",
														"items": {
															"type": "string"
														}
													},
													"schemaReference": {
														"type": "string",
														"description": "The absolute path to a schema file, for dynamic references that are allowed at this argument."
													}
												}
											}
										}
									}
								},
								"isDeprecated": {
									"type": "boolean",
									"description": "Whether this value is deprecated or not. If it is deprecated, it will not be proposed in auto-completions."
								},
								"deprecationMessage": {
									"type": "string",
									"description": "The warning message to display if the value is used, but deprecated."
								}
							}
						}
					}
				}
			}
		}
	}
}
